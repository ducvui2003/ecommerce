# docker compose --env-file .env up -d

version: "3.8"

services:
  ecommerce-client:
    build:
      context: ../web
    ports:
      - ${PORT}:3000
    env_file:
      - env/web.production.env
    environment:
      NEXT_PUBLIC_SERVER_URL: "http://ecommerce-server:8000"
      NEXT_PUBLIC_SERVER_INTERNAL: "http://ecommerce-client:3000"

  ecommerce-server:
    build:
      context: ../server
    ports:
      - ${PORT}:8000
    env_file:
      - env/server.production.env
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/ecommerce?schema=public"
      REDIS_URL: "redis://default:${REDIS_PASSWORD}@redis:6379"
      ORIGIN_ALLOWED: http://ecommerce-client:3000,http://localhost
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:latest
    ports:
      - "${POSTGRES_PORT}:5432"
    env_file:
      - env/server.production.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ecommerce
    volumes:
      - ecommerce_postgres_data:/var/lib/postgresql/data
      - ./init/postgres:/docker-entrypoint-initdb.d

  redis:
    image: redis:7.4.2-alpine
    ports:
      - "${REDIS_PORT}:6379"
    env_file:
      - env/server.production.env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ecommerce_redis_data:/data

volumes:
  ecommerce_redis_data:
  ecommerce_postgres_data:
