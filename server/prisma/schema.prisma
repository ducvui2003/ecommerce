// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  name         String         @default("")
  password     String
  refreshToken RefreshToken[]
  phone        String         @default("")
  avatar       String         @default("")
  status       UserStatus     @default(INACTIVE)
  roleId       Int            @default(1)

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
  Role      Role      @relation(fields: [roleId], references: [id])

  @@map("user")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  user User[]

  @@map("role")
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}

model RefreshToken {
  token     String   @id
  expiredAt DateTime
  userId    Int

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("refresh_token")
}

model VerificationCode {
  id        Int              @id @default(autoincrement())
  email     String           @unique
  type      VerificationType
  code      String
  expiredAt DateTime

  createdAt DateTime @default(now())

  @@index([id, email, type])
  @@map("verification_code")
}

enum VerificationType {
  REGISTER
  FORGOT_PASSWORD
}

// npx prisma db push
